C51 COMPILER V9.60.0.0   LCD                                                               06/04/2022 20:18:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include<reg51.h>
   2          #include"delay.h"
   3          #include"lcd.h"
   4          #define LCD_DAT P2
   5          sbit rs=P3^0;
   6          sbit rw=P3^1;
   7          sbit en=P3^2;
   8          void LCD_Init(void)
   9          {
  10   1        delay_ms(16); 
  11   1        Write_cmd_LCD(0x30);
  12   1        delay_ms(6);  
  13   1        Write_cmd_LCD(0x30);
  14   1        delay_ms(1);  
  15   1        Write_cmd_LCD(0x30);
  16   1        delay_ms(1);
  17   1        Write_cmd_LCD(0x30);//8-bit interface 
  18   1              //5X7 font and 1-line disp
  19   1        Write_cmd_LCD(0x10);//To turn off the disp
  20   1        Write_cmd_LCD(0x01);//To clear the disp
  21   1        Write_cmd_LCD(0x06);//Inc the cursor
  22   1              //after writing each byte on to the disp
  23   1        Write_cmd_LCD(0x0f);//Disp ON cur ON with blinking
  24   1      }
  25          void Write_cmd_LCD(unsigned char cmd)
  26          {
  27   1        rs=0;
  28   1        disp_LCD(cmd);
  29   1      }
  30          void Write_dat_LCD(unsigned char dat)
  31          {
  32   1        rs=1;
  33   1        disp_LCD(dat);
  34   1      }
  35          void disp_LCD(unsigned char ch)
  36          {
  37   1        LCD_DAT=ch;
  38   1        rw=0;
  39   1        en=1;
  40   1        en=0;
  41   1        delay_ms(2);
  42   1      
  43   1      }
  44          void Write_str_LCD(char *ptr)
  45          {
  46   1        while(*ptr!='\0')
  47   1          Write_dat_LCD(*ptr++);    
  48   1      }
  49          char code a[]={0x1f,0x11,0x11,0x11,0x11,0x1f,0x1f,0x00};
  50          void store_font_CGRAM(void)
  51          {
  52   1        char i;
  53   1        Write_cmd_LCD(0x40);//Placing the cursor in CGRAM
  54   1        for(i=0;i<=7;i++)
C51 COMPILER V9.60.0.0   LCD                                                               06/04/2022 20:18:54 PAGE 2   

  55   1          Write_dat_LCD(a[i]);  
  56   1      }
  57          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    182    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
